name: ci
on:
  push:
    tags:
      - v*
  pull_request:

jobs:
  unit-tests:
    name: Codegen And Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'
          check-latest: true
          cache: true
      - name: Install Dependencies
        run: make install_dependencies
      - name: Check Code Generation
        run: make check_codegen
        env:
          GOPATH: /home/runner/go
      - name: Run Unit Tests
        run: make unit_tests

  lint-code:
    name: Lint code
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'
          check-latest: true
          cache: true
      - name: Run Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.48.0
          args: --timeout 5m

  lint-docs:
    name: Lint docs
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Missspell
        uses: reviewdog/action-misspell@v1
        with:
          locale: "US"
          level: "info"
          pattern: |
            *.md
          exclude: |
            ./.git/*

  e2e-tests:
    name: e2e Test Suite
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        k3sVersion:
          - "v1.25.0-k3s1"
          - "v1.24.4-k3s1"
          - "v1.23.10-k3s1"
          - "v1.22.13-k3s1"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'
          check-latest: true
          cache: true
      - name: Install google/ko
        uses: imjasonh/setup-ko@v0.6
      - name: Install helm
        uses: azure/setup-helm@v3
        with:
          version: v3.9.3
      - name: Install k3d
        uses: rinx/setup-k3d@v0.0.4
        with:
          version: v5.4.4
          skipClusterCreation: true
      - name: Patch /etc/hosts
        run: |
          echo "127.0.0.1 kudo-e2e-registry.localhost" | sudo tee -a /etc/hosts
      - name: Run The e2e Test Suite
        run: make e2e_tests
        env:
          K3S_VERSION: ${{ matrix.k3sVersion }}

  release:
    name: Release
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - unit-tests
      - lint-code
      - lint-docs
      - e2e-tests
    steps:
      - name: Release a New Version
        run: echo "do this when there's something to release!"
